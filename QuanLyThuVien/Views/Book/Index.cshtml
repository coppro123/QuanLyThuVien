@model IEnumerable<QuanLyThuVien.Models.Book>

@{
	ViewData["Title"] = "Index";
	var categories = ViewBag.Categories as SelectList;
}

<div class="row mb-3 justify-content-between">
	<div class="col-md-3">
		<form id="categoryForm" method="get" action="">
			<div class="input-group">

				<select class="form-select" id="categorySelect">
					<option value="" disabled selected>Chọn thể loại</option>
					<option value="-1">All</option>

					@foreach (SelectListItem category in categories)
					{
						<option value="@category.Value">@category.Text</option>
					}
				</select>

			</div>
		</form>
	</div>


	<div class="col-md-3">
		<form class="d-flex" asp-controller="Book" asp-action="Index">
			<input class="form-control me-2" type="text" name="SearchString" placeholder="Nhập tên sách" />
			<button class="btn btn-outline-success" type="submit">Search</button>
		</form>
	</div>

</div>

<div class="row">
	<div class="col-md-12">
		<div class="row row-cols-1 row-cols-md-5 g-4">

			@foreach (var item in Model)
			{
				<div class="col">
					<div class="card">
						<a asp-action="Details" asp-controller="Book" asp-route-id="@item.Id">
							<img src="@item.ImageUrl" class="card-img-top" alt="@item.Title" />
						</a>
						<div class="card-body">
							<a class="nav-link p-0" asp-action="Details" asp-controller="Book" asp-route-id="@item.Id">
								<h5 class="card-title">@Truncate(item.Title, 18)</h5> <!-- Limiting title to 20 characters -->
							</a>
							<p class="card-text">Tác giả: @item.Author</p>
							<p class="card-text">Thể loại: @item.Category.Name</p>
							<p class="card-text">Số lượng còn lại: @item.Quantity</p>
						</div>
					</div>
				</div>
			}

		</div>
	</div>
</div>

<script>
	@functions {
		public string Truncate(string value, int maxLength)
		{
			if (string.IsNullOrEmpty(value))
				return value;

			return value.Length <= maxLength ? value : value.Substring(0, maxLength) + "...";
		}
 }
</script>

<script>
	document.getElementById('searchButton').addEventListener('click', function () {
		var searchTerm = document.getElementById('searchInput').value;
		var searchUrl = '@Url.Action("Search", "ProductManagerController")' + '?searchString=' + encodeURIComponent(searchTerm);

		window.location.href = searchUrl;
	});

</script>



<script>
	document.getElementById('categorySelect').addEventListener('change', function () {
		var selectedValue = this.value;

		localStorage.setItem('selectedCategory', selectedValue);

		console.log("Giá trị 'selectedCategory' trong localStorage là: ", localStorage.selectedCategory);

		var form = document.getElementById('categoryForm');
		form.action = '/Book/findbycategory/' + selectedValue;
		form.submit();
	});

	window.onload = function () {
		// Lấy giá trị 'selectedCategory' từ localStorage
		var selectedValue = localStorage.selectedCategory;

		// Kiểm tra nếu giá trị tồn tại
		if (selectedValue) {
			// Thiết lập giá trị cho dropdown
			document.getElementById('categorySelect').value = selectedValue;
		}
	};
	

</script>



